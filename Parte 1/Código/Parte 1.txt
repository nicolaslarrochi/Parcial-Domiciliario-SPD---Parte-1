/*
SPD 1-E
Profesores: Dario Cuda
            Esteban Quiroz
Alumno:     Nicolás Larrochi            

Parcial Integrador - 1.0

Parte 1: Contador de 0 a 99 con Display 7 Segmentos y Multiplexación

*/

#define B 13
#define A 12
#define F 11
#define G 10
#define E 9
#define D 8
#define C 7
#define UNIDAD A4
#define DECENA A5
#define RESET 5
#define SUMA 4
#define RESTA 3
#define APAGADOS 0

int countDigit = 0; // Contador
int sube = 1;       // Pulsadores constantes
int subio = 1;
int baja = 1;
int bajo = 1;
int reset = 1;
int reseteo = 1;
  
void setup()
{
  
  pinMode(B, OUTPUT);
  pinMode(A, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(RESET,INPUT_PULLUP); // Reset
  pinMode(SUMA,INPUT_PULLUP); // Suma
  pinMode(RESTA,INPUT_PULLUP); // Resta
  pinMode(UNIDAD, OUTPUT); // Display Unidad
  pinMode(DECENA, OUTPUT); // Display Decena
  
  digitalWrite(UNIDAD,0);  // Inicializo y se prenden ambos displays en 0
  digitalWrite(DECENA,0);
  printDigit(0);
  
}

void loop()
{
  int pressed = keypressed(); // tecla presionada 
  
  if (pressed == SUMA) // Si se presiona suma,
                       // sumará 1 al contador   
  {
    countDigit++;
    if (countDigit > 99)
    {
      countDigit = 0;   // Si ese contador está en 99 y suma
                        // retornará 0  
    }
  }
  else if (pressed == RESTA) // Si se presiona resta, 
                             // Restará 1 al contador 
  {
    countDigit--;
    if(countDigit < 0)    // Si ese contador está en 0 y resta
                          // retornará 99
    {
      countDigit = 99;
    }
  }
  else if (pressed == RESET) // Si se presiona reset,
  {                          // Retornara 0 al contador  
    countDigit=0;
  }
  
  printCount(countDigit);  // Muestra números!
  
}  

int keypressed(void) 
{
  sube = digitalRead(SUMA);  // Lee estado de los botones
  baja = digitalRead(RESTA);
  reset = digitalRead(RESET);
  
  if(sube)  // Botones sin presionar
  {
    subio = 1; // Tampoco estaban presionados
  }
  if(baja)
  {
    bajo = 1;
  }
  if(reset)
  {
    reseteo = 1;
  }
  
  if (sube == 0 && sube != subio) // Si se presiona boton
  {
    subio = sube;                 // Igualo el estado
    return SUMA;                  // Retorna el Estado del boton  
  }
  
  if (baja == 0 && baja != bajo)
  {
    bajo = baja;
    return RESTA;
  }
  
  if (reset == 0 && reset != reseteo)
  {
    reseteo = reset;
    return RESET;
  }
  return 0; // Si no se presionó ningun boton o ya estaba
            // presionada.
}
  
  
void printCount(int count) // Imprime el num obtenido del contador
                           // Utilización de multiplexación para que muestre ambos displays
{
  prendeDigito(APAGADOS);  // Apaga todos
  printDigit(count/10);  // Toma el valor de la decena 
  prendeDigito(DECENA);  // Prende display decena
  prendeDigito(APAGADOS); // Apaga todos
  printDigit(count - 10 * ((int)count/10)); // Toma el valor de la unidad
  prendeDigito(UNIDAD); // Prende display unidad          
}  
  

void prendeDigito (int digito)
{
  if (digito == UNIDAD)
  {
    digitalWrite(UNIDAD, LOW);  //  unidad = 0 (Prende)
    digitalWrite(DECENA, HIGH); //  decena = 1 (Apaga)
    delay(10);
  }
  else if (digito == DECENA)
  {
    digitalWrite(UNIDAD, HIGH); // unidad = 1 (Apaga)
    digitalWrite(DECENA, LOW);  // decena = 0 (Prende)
    delay(10);
  }
  else
  {
    digitalWrite(UNIDAD, HIGH);  // Ambos se apagan
    digitalWrite(DECENA, HIGH);
  }
}  
    
void printDigit(int digit)  // Dibuja el numero en el display de 7Segmentos
{
    digitalWrite(A, LOW);   // Inicialización
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);

    switch (digit) {
        case 0:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, LOW);
         break;
         case 1:
            digitalWrite(A, LOW);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, LOW);
            digitalWrite(E, LOW);
            digitalWrite(F, LOW);
            digitalWrite(G, LOW);
         break;
         case 2:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, LOW);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, LOW);
            digitalWrite(G, HIGH);
         break;
         case 3:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, LOW);
            digitalWrite(F, LOW);
            digitalWrite(G, HIGH);
         break;
         case 4:
            digitalWrite(A, LOW);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, LOW);
            digitalWrite(E, LOW);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
         break;
         case 5:
            digitalWrite(A, HIGH);
            digitalWrite(B, LOW);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, LOW);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
         break;
         case 6:
            digitalWrite(A, HIGH);
            digitalWrite(B, LOW);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
         break;
         case 7:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, LOW);
            digitalWrite(E, LOW);
            digitalWrite(F, LOW);
            digitalWrite(G, LOW);
         break;
         case 8:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
         break;
         case 9:
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, LOW);
            digitalWrite(E, LOW);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
         break;
    }
}
